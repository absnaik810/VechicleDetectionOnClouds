---
- name: Installation of developer tools
  become: true
  apt: name={{ item }} state=present
  with_items:
  - build-essential
  - cmake
  - git
  - pkg-config

- name: Installation of libraries to support different image formats
  become: true
  apt: name={{ item }} state=present
  with_items:
  - libjpeg8-dev
  - libtiff4-dev
  - libjasper-dev
  - libpng12-dev

- name: Installation of libraries to support different video formats
  become: true
  apt: name={{ item }} state=present
  with_items:
  - libavcodec-dev
  - libavformat-dev
  - libswscale-dev
  - libv4l-dev

- name: Installation of GTK for OpenCV GUI support
  become: true
  apt: name=libgtk2.0-dev state=present

- name: Installation of packages used for optimization in OpenCV
  become: true
  apt: name={{ item }}
  with_items:
  - libatlas-base-dev
  - gfortran

- name: Installation of Python3 headers
  become: true
  apt: name=python3.4-dev

- name: Installation of unzip for unzipping OpenCV later
  become: true
  apt: name=unzip

- name: Checking if temporary directory already exists
  stat: path={{ dwnld_dr }}
  register: tmp

- name: Creating temporary download directory
  file: name={{ dwnld_dr }} state=directory
  when: tmp.stat.exists == false

- name: Downloading and unzipping OpenCV
  unarchive: src=https://github.com/Itseez/opencv/archive/{{ ocv_ver }}.zip dest={{ dwnld_dr }} copy=no

#- name: Download and unzip opencv_contrib
#  unarchive: src=https://github.com/Itseez/opencv_contrib/archive/{{ ocv_ver }}.zip dest={{ dwnld_dr }} copy=no

- name: Creating the build directory
  file: name={{ dwnld_dr }}/opencv-{{ ocv_ver }}/build state=directory

- name: Making the OpenCV build artifacts
  shell: |
    source /usr/local/bin/virtualenvwrapper.sh
    cmake -D CMAKE_BUILD_TYPE=RELEASE -D CMAKE_INSTALL_PREFIX=/usr/local -D INSTALL_C_EXAMPLES=OFF -D INSTALL_PYTHON_EXAMPLES=ON -D OPENCV_EXTRA_MODULES_PATH={{ dwnld_dr }}/opencv_contrib-{{ ocv_ver }}/modules -D BUILD_EXAMPLES=ON ..
  args:
    chdir: "{{ dwnld_dr }}/opencv-{{ ocv_ver }}/build"
    executable: /bin/bash

- name: Compiling OpenCV
  shell: |
    source /usr/local/bin/virtualenvwrapper.sh
    make
  args:
    chdir: "{{ dwnld_dr }}/opencv-{{ ocv_ver }}/build"
    executable: /bin/bash

- name: Getting the full path of download directory
  shell: pwd
  args:
    chdir: "{{ dwnld_dr }}"
  register: pwd_result

- name: Installing opencv
  become: true
  shell: |
    source /usr/local/bin/virtualenvwrapper.sh
    make install
    ldconfig
  args:
    chdir: "{{ pwd_result.stdout }}/opencv-{{ ocv_ver }}/build"
    executable: /bin/bash

#- name: Remove temporary download directory, if it didn't prevously exist
#  file: name={{ dwnld_dr }} state=absent
#  when: tmp.stat.exists == false
